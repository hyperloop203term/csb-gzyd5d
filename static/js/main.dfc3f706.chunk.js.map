{"version":3,"sources":["api/githubAPI.tsx","state.ts","features/repoSearch/RepoSearchForm.tsx","features/issuesList/IssuesPageHeader.tsx","utils/stringUtils.ts","components/IssueLabels.tsx","components/UserWithAvatar.tsx","features/issuesList/IssueListItem.tsx","features/issuesList/IssuesList.tsx","features/issuesList/IssuePagination.tsx","features/issuesList/IssuesListPage.tsx","features/issueDetails/IssueMeta.tsx","features/issueDetails/IssueComments.tsx","features/issueDetails/IssueDetailsPage.tsx","app/App.tsx","components/UserWithAvatar.module.css","features/issueDetails/IssueComments.module.css","features/issueDetails/IssueDetailsPage.module.css","features/issuesList/IssueListItem.module.css","features/issueDetails/IssueMeta.module.css","features/issuesList/IssuesList.module.css","features/issuesList/IssuePagination.module.css","index.tsx"],"names":["getPageCount","pageLinks","Object","keys","length","first","prev","isLastPage","parseInt","page","last","repoSubject$","Subject","pageSelected$","onPageChange","nextPage","next","issueSelected$","onIssueUnselecteed","bind","pipe","startWith","org","repo","useCurrentRepo","currentRepo$","currentRepoAndPage$","merge","map","currentRepo","withLatestFrom","shareLatest","pluck","useCurrentPage","switchMap","url","ajax","get","r","pageCount","parseLink","xhr","getResponseHeader","issues","response","getIssues","SUSPENSE","useIssues","issues$","getJSON","getRepoOpenIssuesCount","useOpenIssuesLen","openIssuesLen$","switchMapTo","catchError","EMPTY","subscribe","useSelectedIssueId","selectedIssueId$","filter","id","number","getIssue","useIssue","issue$","issue","comments_url","useIssueComments","issueComments$","RepoSearchForm","useState","currentOrg","setCurrentOrg","setCurrentRepo","toString","currentPageText","setCurrentPageText","useEffect","className","htmlFor","style","marginRight","name","value","onChange","e","target","marginLeft","type","onClick","marginTop","newPage","OrgRepo","href","OpenIssues","openIssuesCount","IssuesPageHeader","fallback","insertMentionLinks","markdown","replace","IssueLabels","labels","classnames","label","key","boxShadow","color","borderColor","UserWithAvatar","user","orientation","link","classes","linkClassnames","styles","issueUser","vertical","horizontal","avatarClassnames","avatar","usernameClassnames","username","contents","Fragment","src","avatar_url","alt","login","IssueListItem","title","comments","body","pluralizedComments","preventDefault","stopPropagation","text","maxLength","cleanText","ellip","oneTooLarge","substr","test","i","shorten","IssuesListLoaded","renderedIssues","issuesList","IssuesList","IssuePaginationLoaded","currentPage","pagination","forcePage","marginPagesDisplayed","pageRangeDisplayed","selected","nextLabel","previousLabel","IssuePagination","OnError","error","resetErrorBoundary","subscription","skip","take","unsubscribe","message","IssuesListPage","FallbackComponent","IssueState","state","issueState","open","IssueNumber","IssueMeta","meta","IssueComment","comment","source","IssueComments","commentsList","Comments","BackButton","IssueDetails","issueDetailsPage","issueLabels","divider","summary","Loading","children","IssueError","Issue","IssueDetailsPage","List","App","module","exports","require","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfc3f706.chunk.js","sourcesContent":["import { ajax } from 'rxjs/ajax'\nimport parseLink, { Links } from 'parse-link-header'\nimport { map, pluck } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\nexport interface Label {\n  id: number\n  name: string\n  color: string\n}\n\nexport interface User {\n  login: string\n  avatar_url: string\n}\n\nexport interface Issue {\n  id: number\n  title: string\n  number: number\n  user: User\n  body: string\n  labels: Label[]\n  comments_url: string\n  state: 'open' | 'closed'\n  comments: number\n}\n\nexport interface RepoDetails {\n  id: number\n  name: string\n  full_name: string\n  open_issues_count: number\n}\n\nexport interface Comment {\n  id: number\n  body: string\n  user: User\n  created_at: string\n  updated_at: string\n}\n\nexport interface IssuesResult {\n  pageLinks: Links | null\n  pageCount: number\n  issues: Issue[]\n}\n\nconst isLastPage = (pageLinks: Links) => {\n  return (\n    Object.keys(pageLinks).length === 2 && pageLinks.first && pageLinks.prev\n  )\n}\n\nconst getPageCount = (pageLinks: Links) => {\n  if (!pageLinks) {\n    return 0\n  }\n  if (isLastPage(pageLinks)) {\n    return parseInt(pageLinks.prev.page, 10) + 1\n  } else if (pageLinks.last) {\n    return parseInt(pageLinks.last.page, 10)\n  } else {\n    return 0\n  }\n}\n\nexport function getIssues(\n  org: string,\n  repo: string,\n  page = 1\n): Observable<IssuesResult> {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues?per_page=25&page=${page}`\n  return ajax.get(url).pipe(\n    map((r) => {\n      let pageCount = 0\n      const pageLinks = parseLink(r.xhr.getResponseHeader('link') as string)\n\n      if (pageLinks !== null) {\n        pageCount = getPageCount(pageLinks)\n      }\n\n      return {\n        pageLinks,\n        pageCount,\n        issues: r.response as Issue[],\n      }\n    })\n  )\n}\n\nexport function getRepoOpenIssuesCount(org: string, repo: string) {\n  const url = `https://api.github.com/repos/${org}/${repo}`\n  return ajax.getJSON<RepoDetails>(url).pipe(pluck('open_issues_count'))\n}\n\nexport function getIssue(org: string, repo: string, number: number) {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues/${number}`\n  return ajax.getJSON<Issue>(url)\n}\n\nexport function getComments(url: string) {\n  return ajax.getJSON<Comment[]>(url)\n}\n","import { Subject, merge, EMPTY } from 'rxjs'\nimport {\n  startWith,\n  withLatestFrom,\n  map,\n  pluck,\n  filter,\n  switchMap,\n  switchMapTo,\n  catchError,\n} from 'rxjs/operators'\nimport { bind, shareLatest, SUSPENSE } from '@react-rxjs/core'\nimport {\n  Issue,\n  getIssues,\n  getRepoOpenIssuesCount,\n  getIssue,\n  getComments,\n} from 'api/githubAPI'\n\nexport const INITIAL_ORG = 'rails'\nexport const INITIAL_REPO = 'rails'\n\nconst repoSubject$ = new Subject<{ org: string; repo: string }>()\nexport const onLoadRepo = (org: string, repo: string) => {\n  repoSubject$.next({ org, repo })\n}\n\nconst pageSelected$ = new Subject<number>()\nexport const onPageChange = (nextPage: number) => {\n  pageSelected$.next(nextPage)\n}\n\nconst issueSelected$ = new Subject<number | null>()\nexport const onIssueSelected = (id: number) => {\n  issueSelected$.next(id)\n}\nexport const onIssueUnselecteed = () => {\n  issueSelected$.next(null)\n}\n\nexport const [useCurrentRepo, currentRepo$] = bind(\n  repoSubject$.pipe(\n    startWith({\n      org: INITIAL_ORG,\n      repo: INITIAL_REPO,\n    })\n  )\n)\n\nexport const currentRepoAndPage$ = merge(\n  currentRepo$.pipe(\n    map((currentRepo) => ({\n      ...currentRepo,\n      page: 1,\n    }))\n  ),\n  pageSelected$.pipe(\n    withLatestFrom(currentRepo$),\n    map(([page, repo]) => ({ ...repo, page }))\n  )\n).pipe(shareLatest())\n\nexport const [useCurrentPage] = bind(currentRepoAndPage$.pipe(pluck('page')))\n\nexport const [useIssues, issues$] = bind(\n  currentRepoAndPage$.pipe(\n    switchMap(({ page, repo, org }) =>\n      getIssues(org, repo, page).pipe(startWith(SUSPENSE))\n    )\n  )\n)\n\nexport const [useOpenIssuesLen, openIssuesLen$] = bind(\n  currentRepo$.pipe(\n    switchMap(({ org, repo }) =>\n      getRepoOpenIssuesCount(org, repo).pipe(startWith(SUSPENSE))\n    )\n  )\n)\n\ncurrentRepoAndPage$\n  .pipe(\n    switchMapTo(merge(issues$, openIssuesLen$).pipe(catchError(() => EMPTY)))\n  )\n  .subscribe()\n\nexport const [useSelectedIssueId, selectedIssueId$] = bind(\n  issueSelected$.pipe(startWith(null))\n)\n\nexport const [useIssue, issue$] = bind(\n  selectedIssueId$.pipe(\n    filter((id): id is number => id !== null),\n    withLatestFrom(currentRepo$),\n    switchMap(([id, { org, repo }]) =>\n      getIssue(org, repo, id).pipe(startWith(SUSPENSE))\n    )\n  )\n)\n\nexport const [useIssueComments, issueComments$] = bind(\n  issue$.pipe(\n    filter((issue): issue is Issue => issue !== SUSPENSE),\n    switchMap((issue) =>\n      getComments(issue.comments_url).pipe(startWith(SUSPENSE))\n    )\n  )\n)\n\nselectedIssueId$\n  .pipe(switchMapTo(issueComments$.pipe(catchError(() => EMPTY))))\n  .subscribe()\n","import React, { useState, ChangeEvent, useEffect } from 'react'\n\nimport './pure-forms.css'\nimport './pure-buttons.css'\nimport {\n  useCurrentPage,\n  onLoadRepo,\n  onPageChange,\n  INITIAL_REPO,\n  INITIAL_ORG,\n} from 'state'\n\ntype InputEvent = ChangeEvent<HTMLInputElement>\ntype ChangeHandler = (e: InputEvent) => void\n\nexport const RepoSearchForm: React.FC = () => {\n  const [currentOrg, setCurrentOrg] = useState(INITIAL_ORG)\n  const [currentRepo, setCurrentRepo] = useState(INITIAL_REPO)\n  const page = useCurrentPage()\n  const [currentPageText, setCurrentPageText] = useState(page.toString())\n  useEffect(() => setCurrentPageText(page.toString()), [page])\n\n  const onOrgChanged: ChangeHandler = (e) => {\n    setCurrentOrg(e.target.value)\n  }\n\n  const onRepoChanged: ChangeHandler = (e) => {\n    setCurrentRepo(e.target.value)\n  }\n\n  const onCurrentPageChanged: ChangeHandler = (e) => {\n    setCurrentPageText(e.target.value)\n  }\n\n  const onLoadRepoClicked = () => {\n    onLoadRepo(currentOrg, currentRepo)\n  }\n\n  const onJumpToPageClicked = () => {\n    const newPage = parseInt(currentPageText)\n\n    if (newPage >= 1) {\n      onPageChange(newPage)\n    }\n  }\n\n  return (\n    <form className=\"pure-form\">\n      <div>\n        <label htmlFor=\"org\" style={{ marginRight: 5 }}>\n          Org:\n        </label>\n        <input name=\"org\" value={currentOrg} onChange={onOrgChanged} />\n        <label htmlFor=\"repo\" style={{ marginRight: 5, marginLeft: 10 }}>\n          Repo:\n        </label>\n        <input name=\"repo\" value={currentRepo} onChange={onRepoChanged} />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onLoadRepoClicked}\n        >\n          Load Repo\n        </button>\n      </div>\n      <div style={{ marginTop: 5 }}>\n        <label htmlFor=\"jumpToPage\" style={{ marginRight: 5 }}>\n          Issues Page:\n        </label>\n        <input\n          name=\"jumpToPage\"\n          value={currentPageText}\n          onChange={onCurrentPageChanged}\n        />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onJumpToPageClicked}\n        >\n          Jump to Page\n        </button>\n      </div>\n    </form>\n  )\n}\n","import React, { Suspense } from 'react'\nimport { useOpenIssuesLen, useCurrentRepo } from 'state'\n\nfunction OrgRepo() {\n  const { org, repo } = useCurrentRepo()\n  return (\n    <span>\n      <a href={`https://github.com/${org}`} className=\"header__org\">\n        {org}\n      </a>\n      {' / '}\n      <a href={`https://github.com/${org}/${repo}`} className=\"header__repo\">\n        {repo}\n      </a>\n    </span>\n  )\n}\n\nfunction OpenIssues() {\n  const openIssuesCount = useOpenIssuesLen()\n  return (\n    <>\n      <span className=\"header__openIssues\">{openIssuesCount}</span> open{' '}\n      {openIssuesCount === 1 ? 'issue' : 'issues'} for {}\n    </>\n  )\n}\n\nexport function IssuesPageHeader() {\n  return (\n    <h1>\n      <Suspense fallback={'Open issues for '}>\n        <OpenIssues />\n      </Suspense>\n      <OrgRepo />\n    </h1>\n  )\n}\n","export function insertMentionLinks(markdown: string) {\n  return markdown.replace(\n    /\\B(@([a-zA-Z0-9](-?[a-zA-Z0-9_])+))/g,\n    `**[$1](https://github.com/$2)**`\n  )\n}\n\nexport function shorten(text = '', maxLength = 140) {\n  // Normalize newlines\n  let cleanText = text.replace(/\\\\r\\\\n/g, '\\n')\n\n  // Return if short enough already\n  if (cleanText.length <= maxLength) {\n    return cleanText\n  }\n\n  const ellip = ' ...'\n\n  // Return the 140 chars as-is if they end in a non-word char\n  const oneTooLarge = cleanText.substr(0, 141)\n  if (/\\W$/.test(oneTooLarge)) {\n    return oneTooLarge.substr(0, 140) + ellip\n  }\n\n  // Walk backwards to the nearest non-word character\n  let i = oneTooLarge.length\n  while (--i) {\n    if (/\\W/.test(oneTooLarge[i])) {\n      return oneTooLarge.substr(0, i) + ellip\n    }\n  }\n\n  return oneTooLarge.substr(0, 140) + ellip\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Label } from 'api/githubAPI'\n\ninterface IssueLabelsProps {\n  labels: Label[]\n  className?: string\n}\n\nexport const IssueLabels = ({ labels, className }: IssueLabelsProps) => (\n  <div className={classnames('issue__labels', className)}>\n    {labels.map((label) => (\n      <span\n        key={label.id}\n        className=\"issue__label\"\n        style={{\n          boxShadow: `0 0 2px #${label.color}`,\n          borderColor: `#${label.color}`,\n        }}\n      >\n        {label.name}\n      </span>\n    ))}\n  </div>\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { User } from 'api/githubAPI'\nimport styles from './UserWithAvatar.module.css'\n\ninterface UserAvatarProps {\n  user: User\n  orientation?: 'vertical' | 'horizontal'\n  link?: boolean\n  classes?: { [key: string]: string }\n}\n\nexport const UserWithAvatar = ({\n  user,\n  orientation = 'vertical',\n  link = true,\n  classes = {},\n}: UserAvatarProps) => {\n  const linkClassnames = classnames(styles.issueUser, {\n    [styles.vertical]: orientation === 'vertical',\n    [styles.horizontal]: orientation === 'horizontal',\n  })\n\n  const avatarClassnames = classnames(styles.avatar, classes.avatar)\n  const usernameClassnames = classnames(styles.username, classes.username)\n\n  const contents = (\n    <React.Fragment>\n      <img className={avatarClassnames} src={user.avatar_url} alt=\"\" />\n      <div className={usernameClassnames}>{user.login}</div>\n    </React.Fragment>\n  )\n\n  if (link) {\n    return (\n      <a href={`https://github.com/${user.login}`} className={linkClassnames}>\n        {contents}\n      </a>\n    )\n  } else {\n    return <span className={linkClassnames}>{contents}</span>\n  }\n}\n","import React, { MouseEvent } from 'react'\n\nimport { Issue } from 'api/githubAPI'\nimport { shorten } from 'utils/stringUtils'\n\nimport { IssueLabels } from 'components/IssueLabels'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueListItem.module.css'\nimport { onIssueSelected } from 'state'\n\nexport const IssueListItem = ({\n  number,\n  title,\n  labels,\n  user,\n  comments,\n  body = '',\n}: Issue) => {\n  const onIssueClicked = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onIssueSelected(number)\n  }\n\n  const pluralizedComments = comments === 1 ? 'comment' : 'comments'\n\n  return (\n    <div className={styles.issue}>\n      <UserWithAvatar user={user} />\n      <div className=\"issue__body\">\n        <a href=\"#comments\" onClick={onIssueClicked}>\n          <span className={styles.number}>#{number}</span>\n          <span className={styles.title}>{title}</span>\n        </a>\n        <br /> ({comments} {pluralizedComments})\n        <p className=\"issue__summary\">{shorten(body)}</p>\n        <IssueLabels labels={labels} className={styles.label} />\n      </div>\n    </div>\n  )\n}\n","import React, { Suspense } from 'react'\n\nimport { IssueListItem } from './IssueListItem'\n\nimport styles from './IssuesList.module.css'\nimport { useIssues } from 'state'\n\nconst IssuesListLoaded = () => {\n  const { issues } = useIssues()\n  const renderedIssues = issues.map((issue) => (\n    <li key={issue.id}>\n      <IssueListItem {...issue} />\n    </li>\n  ))\n\n  return <ul className={styles.issuesList}>{renderedIssues}</ul>\n}\n\nexport const IssuesList = () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <IssuesListLoaded />\n  </Suspense>\n)\n","import React, { Suspense } from 'react'\nimport classnames from 'classnames'\nimport Paginate from 'react-paginate'\n\nimport styles from './IssuePagination.module.css'\nimport './IssuePagination.css'\nimport { useCurrentPage, useIssues, onPageChange } from 'state'\n\nconst IssuePaginationLoaded = () => {\n  const currentPage = useCurrentPage() - 1\n  const { pageCount } = useIssues()\n\n  return pageCount === 0 ? null : (\n    <div className={classnames('issuesPagination', styles.pagination)}>\n      <Paginate\n        forcePage={currentPage}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={({ selected }) => onPageChange(selected + 1)}\n        nextLabel=\"&rarr;\"\n        previousLabel=\"&larr;\"\n      />\n    </div>\n  )\n}\n\nexport const IssuePagination = () => (\n  <Suspense fallback={null}>\n    <IssuePaginationLoaded />\n  </Suspense>\n)\n","import React, { useEffect } from 'react'\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary'\n\nimport { IssuesPageHeader } from './IssuesPageHeader'\nimport { IssuesList } from './IssuesList'\nimport { IssuePagination } from './IssuePagination'\nimport { currentRepoAndPage$ } from 'state'\nimport { skip, take } from 'rxjs/operators'\n\nconst OnError: React.FC<FallbackProps> = ({ error, resetErrorBoundary }) => {\n  useEffect(() => {\n    const subscription = currentRepoAndPage$\n      .pipe(skip(1), take(1))\n      .subscribe(resetErrorBoundary)\n    return () => subscription.unsubscribe()\n  }, [resetErrorBoundary])\n  return (\n    <div>\n      <h1>Something went wrong...</h1>\n      <div>{error && error.message}</div>\n    </div>\n  )\n}\n\nexport const IssuesListPage = () => {\n  return (\n    <ErrorBoundary FallbackComponent={OnError}>\n      <div id=\"issue-list-page\">\n        <IssuesPageHeader />\n        <IssuesList />\n        <IssuePagination />\n      </div>\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Issue } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueMeta.module.css'\n\ninterface IssueProps {\n  issue: Issue\n}\n\nconst IssueState = ({ issue: { state } }: IssueProps) => (\n  <span\n    className={classnames('issue-detail__state', styles.issueState, {\n      [styles.open]: state === 'open',\n    })}\n  >\n    {state}\n  </span>\n)\n\nconst IssueNumber = ({ issue }: IssueProps) => (\n  <span className={classnames('issue-detail__number', styles.number)}>\n    #{issue.number}\n  </span>\n)\n\nexport const IssueMeta = ({ issue }: IssueProps) => {\n  return (\n    <div className={classnames('issue-detail__meta', styles.meta)}>\n      <IssueNumber issue={issue} />\n      <IssueState issue={issue} />\n      <UserWithAvatar user={issue.user} orientation=\"horizontal\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\nimport { Comment } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueComments.module.css'\nimport { useIssueComments } from 'state'\n\ninterface ICProps {\n  comment: Comment\n}\n\nfunction IssueComment({ comment }: ICProps) {\n  return (\n    <div className={styles.comment}>\n      <UserWithAvatar\n        user={comment.user}\n        classes={{ avatar: styles.avatar, username: styles.username }}\n        orientation=\"horizontal\"\n      />\n\n      <div className={styles.body}>\n        <ReactMarkdown\n          className=\"markdown\"\n          source={insertMentionLinks(comment.body)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const IssueComments: React.FC = () => {\n  const comments = useIssueComments()\n  return (\n    <ul className={styles.commentsList}>\n      {comments.map((comment) => (\n        <li key={comment.id}>\n          <IssueComment comment={comment} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { Suspense } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from 'classnames'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\nimport { IssueLabels } from 'components/IssueLabels'\n\nimport { IssueMeta } from './IssueMeta'\nimport { IssueComments } from './IssueComments'\n\nimport styles from './IssueDetailsPage.module.css'\nimport './IssueDetailsPage.css'\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary'\nimport { onIssueUnselecteed, useIssue, useSelectedIssueId } from 'state'\n\nconst Comments: React.FC = () => {\n  const { comments } = useIssue()\n  return comments === 0 ? (\n    <div className=\"issue-detail--no-comments\">No comments</div>\n  ) : (\n    <Suspense\n      fallback={\n        <div className=\"issue-detail--comments-loading\">Coments loading...</div>\n      }\n    >\n      <IssueComments />\n    </Suspense>\n  )\n}\n\nconst BackButton = () => (\n  <button className=\"pure-button\" onClick={onIssueUnselecteed}>\n    Back to Issues List\n  </button>\n)\n\nconst IssueDetails: React.FC = () => {\n  const issue = useIssue()\n  return (\n    <div className={classnames('issueDetailsPage', styles.issueDetailsPage)}>\n      <h1 className=\"issue-detail__title\">{issue.title}</h1>\n      <BackButton />\n      <IssueMeta issue={issue} />\n      <IssueLabels labels={issue.labels} className={styles.issueLabels} />\n      <hr className={styles.divider} />\n      <div className={styles.summary}>\n        <ReactMarkdown\n          className={'testing'}\n          source={insertMentionLinks(issue.body)}\n        />\n      </div>\n      <hr className={styles.divider} />\n    </div>\n  )\n}\n\nconst Loading: React.FC = ({ children }) => (\n  <div className=\"issue-detail--loading\">\n    <BackButton />\n    {children}\n  </div>\n)\n\nconst IssueError: React.FC<FallbackProps> = ({ error }) => (\n  <Loading>\n    <p>Something went wrong...</p>\n    <p>{error!.message}</p>\n  </Loading>\n)\n\nconst Issue: React.FC<{ id: number }> = ({ id }) => {\n  return (\n    <div>\n      <ErrorBoundary FallbackComponent={IssueError}>\n        <Suspense\n          fallback={\n            <Loading>\n              <p>Loading issue #{id}...</p>\n            </Loading>\n          }\n        >\n          <IssueDetails />\n          <Comments />\n        </Suspense>\n      </ErrorBoundary>\n    </div>\n  )\n}\n\nexport const IssueDetailsPage: React.FC = () => {\n  const id = useSelectedIssueId()\n  return id === null ? null : <Issue id={id} />\n}\n","import React from 'react'\nimport './App.css'\nimport { RepoSearchForm } from 'features/repoSearch/RepoSearchForm'\nimport { IssuesListPage } from 'features/issuesList/IssuesListPage'\nimport { IssueDetailsPage } from 'features/issueDetails/IssueDetailsPage'\nimport { useSelectedIssueId } from 'state'\n\nconst List: React.FC = () =>\n  useSelectedIssueId() === null ? (\n    <>\n      <RepoSearchForm />\n      <IssuesListPage />\n    </>\n  ) : null\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <List />\n    <IssueDetailsPage />\n  </div>\n)\n\nexport default App\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueUser\":\"UserWithAvatar_issueUser__1rZ56\",\"avatar\":\"UserWithAvatar_avatar__2b4Ue\",\"username\":\"UserWithAvatar_username__DZB8Q\",\"vertical\":\"UserWithAvatar_vertical__3VEes\",\"horizontal\":\"UserWithAvatar_horizontal__3DPD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"IssueComments_comment__2K-P3\",\"body\":\"IssueComments_body__26Hu9\",\"avatar\":\"IssueComments_avatar__1IClw\",\"username\":\"IssueComments_username__3CX3Q\",\"commentsList\":\"IssueComments_commentsList__1rPMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueDetailsPage\":\"IssueDetailsPage_issueDetailsPage__2L9pw\",\"issueLabels\":\"IssueDetailsPage_issueLabels__2xoOq\",\"summary\":\"IssueDetailsPage_summary__3WqKZ\",\"divider\":\"IssueDetailsPage_divider__2tP7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issue\":\"IssueListItem_issue__2Yp8T\",\"number\":\"IssueListItem_number___KKiF\",\"title\":\"IssueListItem_title__1l-Lb\",\"label\":\"IssueListItem_label__319aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueState\":\"IssueMeta_issueState__39S-8\",\"open\":\"IssueMeta_open__1dZwy\",\"number\":\"IssueMeta_number__1Exec\",\"meta\":\"IssueMeta_meta__V0kVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issuesList\":\"IssuesList_issuesList__3YTSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"IssuePagination_pagination__1fZ4j\"};","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nconst render = () => {\n  const App = require('./app/App').default\n\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./app/App', render)\n}\n"],"sourceRoot":""}